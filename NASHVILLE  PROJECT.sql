SELECT TOP (1000) [UniqueID ]
      ,[ParcelID]
      ,[LandUse]
      ,[PropertyAddress]
      ,[SaleDate]
      ,[SalePrice]
      ,[LegalReference]
      ,[SoldAsVacant]
      ,[OwnerName]
      ,[OwnerAddress]
      ,[Acreage]
      ,[TaxDistrict]
      ,[LandValue]
      ,[BuildingValue]
      ,[TotalValue]
      ,[YearBuilt]
      ,[Bedrooms]
      ,[FullBath]
      ,[HalfBath]
  FROM [NASHVILLEHOUSINGPROJECT].[dbo].[NASHVILLE]


  --CLEANING DATA IN SQL QURIES

  SELECT*
  FROM NASHVILLEHOUSINGPROJECT.dbo.NASHVILLE

  -- STANDARDIZE DATA FORMAT
  
   SELECT SALEDATECONVERTED, CONVERT(DATE,SALEDATE) 
  FROM NASHVILLEHOUSINGPROJECT.dbo.NASHVILLE

  UPDATE NASHVILLEHOUSINGPROJECT.dbo.NASHVILLE
  SET Saledate=CONVERT(DATE,SALEDATE) 

  ALTER TABLE NASHVILLE
  ADD SALEDATECONVERTED DATE;

  UPDATE NASHVILLEHOUSINGPROJECT.dbo.NASHVILLE
  SET SALEDATECONVERTED=CONVERT(DATE,SALEDATE) 

  -- POPULATE PROPERTY ADDRESS DATA
  SELECT *
  FROM NASHVILLEHOUSINGPROJECT.dbo.NASHVILLE
  --WHERE PropertyAddress IS NULL
  ORDER BY ParcelID

  SELECT A.ParcelID,A.PropertyAddress,B.ParcelID,B.PropertyAddress
  FROM NASHVILLEHOUSINGPROJECT.dbo.NASHVILLE A
  JOIN NASHVILLEHOUSINGPROJECT.dbo.NASHVILLE B
  ON A.ParcelID=B.PropertyAddress
  AND A.[UniqueID ] <> B.[UniqueID ]
  WHERE A.PropertyAddress IS NULL


  SELECT  A.PARCELID,B.PropertyAddress
  FROM NASHVILLEHOUSINGPROJECT.dbo.NASHVILLE A
  JOIN NASHVILLEHOUSINGPROJECT.dbo.NASHVILLE B
  ON A.ParcelID=B.PropertyAddress

  --BREAKING OUT ADDRESS INTO INDIVIDUAL COLUMNS (ADDRESS,CITY,STATE)
  SELECT
  SUBSTRING(PROPERTYADDRESS,1, CHARINDEX(',', PROPERTYADDRESS)-1) AS ADDRESS,
  SUBSTRING(PROPERTYADDRESS, CHARINDEX(',', PROPERTYADDRESS)+1, LEN(PropertyAddress)) AS ADDRESS
  FROM NASHVILLEHOUSINGPROJECT.dbo.NASHVILLE

   ALTER TABLE NASHVILLEHOUSINGPROJECT.dbo.NASHVILLE
  ADD PROPERTYSPLITADDRESS NVARCHAR(255);

  UPDATE NASHVILLEHOUSINGPROJECT.dbo.NASHVILLE
  SET PROPERTYSPLITADDRESS= SUBSTRING(PROPERTYADDRESS,1, CHARINDEX(',', PROPERTYADDRESS)-1)

   ALTER TABLE  NASHVILLEHOUSINGPROJECT.dbo.NASHVILLE
  ADD PROPERTYSPLITCITY NVARCHAR(255);

  UPDATE NASHVILLEHOUSINGPROJECT.dbo.NASHVILLE
  SET PROPERTYSPLITCITY= SUBSTRING(PROPERTYADDRESS, CHARINDEX(',', PROPERTYADDRESS)+1, LEN(PropertyAddress)) 

  SELECT*
  FROM NASHVILLEHOUSINGPROJECT.dbo.NASHVILLE 


   SELECT OwnerAddress
  FROM NASHVILLEHOUSINGPROJECT.dbo.NASHVILLE 

   SELECT
   PARSENAME(REPLACE(OWNERADDRESS, ',', ','), 3)
   ,PARSENAME(REPLACE(OWNERADDRESS, ',', ','), 2)
   ,PARSENAME(REPLACE(OWNERADDRESS, ',', ','), 1)
  FROM NASHVILLEHOUSINGPROJECT.dbo.NASHVILLE 


  SELECT
   SUBSTRING(OWNERADDRESS,1, CHARINDEX(',', OWNERADDRESS)-1) AS CULUMN1,
   SUBSTRING(OWNERADDRESS,CHARINDEX(',',OWNERADDRESS)+1,CHARINDEX(',',OWNERADDRESS,CHARINDEX(',',OWNERADDRESS)+1)-CHARINDEX(',',OWNERADDRESS)-1) AS COLUMN2,
   SUBSTRING(OWNERADDRESS, CHARINDEX(',', OWNERADDRESS, CHARINDEX(',',OWNERAddress)+1)+1,LEN(OWNERADDRESS)) AS COLUMN3
  FROM NASHVILLEHOUSINGPROJECT.dbo.NASHVILLE

  ALTER TABLE  NASHVILLEHOUSINGPROJECT.dbo.NASHVILLE
  ADD CULUMN1 NVARCHAR(255);

  UPDATE NASHVILLEHOUSINGPROJECT.dbo.NASHVILLE
  SET CULUMN1= SUBSTRING(OWNERADDRESS,1, CHARINDEX(',', OWNERADDRESS)-1)

  ALTER TABLE  NASHVILLEHOUSINGPROJECT.dbo.NASHVILLE
  ADD COLUMN2 NVARCHAR(255);

  UPDATE NASHVILLEHOUSINGPROJECT.dbo.NASHVILLE
  SET COLUMN2=   SUBSTRING(OWNERADDRESS,CHARINDEX(',',OWNERADDRESS)+1,CHARINDEX(',',OWNERADDRESS,CHARINDEX(',',OWNERADDRESS)+1)-CHARINDEX(',',OWNERADDRESS)-1)


  ALTER TABLE  NASHVILLEHOUSINGPROJECT.dbo.NASHVILLE
  ADD COLUMN3 NVARCHAR(255);

  UPDATE NASHVILLEHOUSINGPROJECT.dbo.NASHVILLE
  SET COLUMN3= SUBSTRING(OWNERADDRESS, CHARINDEX(',', OWNERADDRESS, CHARINDEX(',',OWNERAddress)+1)+1,LEN(OWNERADDRESS))

  SELECT*
  FROM NASHVILLEHOUSINGPROJECT.dbo.NASHVILLE


  SELECT DISTINCT(SoldAsVacant),COUNT(SoldAsVacant)
  FROM NASHVILLEHOUSINGPROJECT.dbo.NASHVILLE
  GROUP BY SoldAsVacant
  ORDER BY 2

  SELECT SOLDASVACANT,
  CASE WHEN SoldAsVacant='Y' THEN 'YES'
		WHEN SoldAsVacant='N' THEN 'NO'
		ELSE SoldAsVacant
		END
  FROM NASHVILLEHOUSINGPROJECT.dbo.NASHVILLE

  UPDATE NASHVILLEHOUSINGPROJECT.dbo.NASHVILLE
 SET SOLDASVACANT=  CASE WHEN SoldAsVacant='Y' THEN 'YES'
		WHEN SoldAsVacant='N' THEN 'NO'
		ELSE SoldAsVacant
		END


		--REMOVE DUPLICATE
		WITH ROWNUMCTE AS(
		SELECT *,
		ROW_NUMBER() OVER(
		PARTITION BY PARCELID,
					 PROPERTYADDRESS,
					 SALEDATE,
					 SALEPRICE,
					 LEGALREFERENCE
					 ORDER BY
					 UNIQUEID 
					 ) ROW_NUM
		FROM NASHVILLEHOUSINGPROJECT.dbo.NASHVILLE
		)
	SELECT*
	FROM ROWNUMCTE
	WHERE ROW_NUM>1
	--ORDER BY PropertyAddress


	--REMOVE DUPLICATE COLUMN

	SELECT*
	FROM NASHVILLEHOUSINGPROJECT.dbo.NASHVILLE

	ALTER TABLE NASHVILLEHOUSINGPROJECT.DBO.NASHVILLE
	DROP COLUMN OWNERADDRESS,TAXDISTRICT,PROPERTYADDRESS

	ALTER TABLE NASHVILLEHOUSINGPROJECT.DBO.NASHVILLE
	DROP COLUMN SALEDATE